Started GET "/graphiql" for ::1 at 2024-04-01 13:38:32 +0900
  [1m[35m (4.5ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (0.1ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 3059.9ms | Allocations: 274202)
Completed 500 Internal Server Error in 3316ms (ActiveRecord: 0.0ms | Allocations: 282863)


  
ActionView::Template::Error (Permission denied @ rb_file_s_rename - (C:/sources/repo/ror/rails_graphql/tmp/cache/assets/sprockets/v4.0.0/ET/ETz8yV_NSqah3ZPe8hW1s0mJYhAhAScaX17C2qOKKUM.cache.22680.7664.879765, C:/sources/repo/ror/rails_graphql/tmp/cache/assets/sprockets/v4.0.0/ET/ETz8yV_NSqah3ZPe8hW1s0mJYhAhAScaX17C2qOKKUM.cache)):
  
sprockets (4.2.1) lib/sprockets/path_utils.rb:362:in `rename'
sprockets (4.2.1) lib/sprockets/path_utils.rb:362:in `atomic_write'
sprockets (4.2.1) lib/sprockets/cache/file_store.rb:112:in `set'
sprockets (4.2.1) lib/sprockets/cache.rb:227:in `set'
sprockets (4.2.1) lib/sprockets/cache.rb:143:in `set'
sprockets (4.2.1) lib/sprockets/loader.rb:343:in `fetch_asset_from_dependency_cache'
sprockets (4.2.1) lib/sprockets/loader.rb:43:in `load'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `block in load'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:207:in `block in fetch_or_store'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:187:in `fetch'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:206:in `fetch_or_store'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `load'
sprockets (4.2.1) lib/sprockets/bundle.rb:27:in `call'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:84:in `call_processor'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:66:in `block in call_processors'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:65:in `reverse_each'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:65:in `call_processors'
sprockets (4.2.1) lib/sprockets/loader.rb:184:in `load_from_unloaded'
sprockets (4.2.1) lib/sprockets/loader.rb:59:in `block in load'
sprockets (4.2.1) lib/sprockets/loader.rb:339:in `fetch_asset_from_dependency_cache'
sprockets (4.2.1) lib/sprockets/loader.rb:43:in `load'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `block in load'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:207:in `block in fetch_or_store'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:187:in `fetch'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:206:in `fetch_or_store'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `load'
sprockets (4.2.1) lib/sprockets/bundle.rb:32:in `block in call'
C:/Ruby32-x64/lib/ruby/3.2.0/set.rb:511:in `each_key'
C:/Ruby32-x64/lib/ruby/3.2.0/set.rb:511:in `each'
sprockets (4.2.1) lib/sprockets/bundle.rb:31:in `call'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:84:in `call_processor'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:66:in `block in call_processors'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:65:in `reverse_each'
sprockets (4.2.1) lib/sprockets/processor_utils.rb:65:in `call_processors'
sprockets (4.2.1) lib/sprockets/loader.rb:184:in `load_from_unloaded'
sprockets (4.2.1) lib/sprockets/loader.rb:59:in `block in load'
sprockets (4.2.1) lib/sprockets/loader.rb:339:in `fetch_asset_from_dependency_cache'
sprockets (4.2.1) lib/sprockets/loader.rb:43:in `load'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `block in load'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:207:in `block in fetch_or_store'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:187:in `fetch'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/map.rb:206:in `fetch_or_store'
sprockets (4.2.1) lib/sprockets/cached_environment.rb:44:in `load'
sprockets (4.2.1) lib/sprockets/base.rb:81:in `find_asset'
sprockets (4.2.1) lib/sprockets/base.rb:88:in `find_all_linked_assets'
sprockets (4.2.1) lib/sprockets/manifest.rb:125:in `each'
sprockets (4.2.1) lib/sprockets/manifest.rb:125:in `to_a'
sprockets (4.2.1) lib/sprockets/manifest.rb:125:in `block (2 levels) in find'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/safe_task_executor.rb:24:in `block in execute'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/safe_task_executor.rb:22:in `execute'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/promise.rb:564:in `block in realize'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:359:in `run_task'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:350:in `block (3 levels) in create_worker'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:341:in `loop'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:341:in `block (2 levels) in create_worker'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:340:in `catch'
concurrent-ruby (1.2.3) lib/concurrent-ruby/concurrent/executor/ruby_thread_pool_executor.rb:340:in `block in create_worker'
Started GET "/" for ::1 at 2024-04-01 13:38:36 +0900
Processing by Rails::WelcomeController#index as HTML
  Rendering C:/Ruby32-x64/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/templates/rails/welcome/index.html.erb
  Rendered C:/Ruby32-x64/lib/ruby/gems/3.2.0/gems/railties-7.1.3.2/lib/rails/templates/rails/welcome/index.html.erb (Duration: 1.4ms | Allocations: 269)
Completed 200 OK in 33ms (Views: 3.7ms | ActiveRecord: 0.0ms | Allocations: 1778)


Started GET "/graphiql" for ::1 at 2024-04-01 13:38:40 +0900
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 36.2ms | Allocations: 24890)
Completed 200 OK in 44ms (Views: 41.8ms | ActiveRecord: 0.0ms | Allocations: 25190)


Started POST "/graphql" for ::1 at 2024-04-01 13:38:40 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Interface `Node` hidden because it has no visible implementors
Completed 200 OK in 150ms (Views: 1.0ms | ActiveRecord: 0.0ms | Allocations: 17335)


Started POST "/graphql" for ::1 at 2024-04-01 13:38:42 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query{\n  fetchNote(id:10)\n  {\n  id\n  title\n  body}\n}", "graphql"=>{"query"=>"query{\n  fetchNote(id:10)\n  {\n  id\n  title\n  body}\n}"}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 686)


Started POST "/graphql" for ::1 at 2024-04-01 13:38:56 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n    testField\n}", "graphql"=>{"query"=>"query {\n    testField\n}"}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 673)


  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT * FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? ORDER BY "ar_internal_metadata"."key" ASC LIMIT 1[0m  [[nil, "environment"]]
  [1m[36mActiveRecord::InternalMetadata Create (13.9ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ('environment', 'development', '2024-04-01 04:41:46.097697', '2024-04-01 04:41:46.097700') RETURNING "key"[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateNotes (20240401044043)
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (1.6ms)[0m  [1m[35mCREATE TABLE "notes" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "title" varchar, "body" text, "created_at" datetime(6) NOT NULL, "updated_at" datetime(6) NOT NULL)[0m
  [1m[35m (0.3ms)[0m  [1m[35mCREATE INDEX "index_notes_on_title" ON "notes" ("title")[0m
  [1m[36mActiveRecord::SchemaMigration Create (0.3ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES ('20240401044043') RETURNING "version"[0m
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mNote Create (2.5ms)[0m  [1m[32mINSERT INTO "notes" ("title", "body", "created_at", "updated_at") VALUES (?, ?, ?, ?) RETURNING "id"[0m  [["title", "Note 1"], ["body", "Lorem ipsum saves lives"], ["created_at", "2024-04-01 04:53:07.063536"], ["updated_at", "2024-04-01 04:53:07.063536"]]
  [1m[36mTRANSACTION (3.7ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mNote Create (0.9ms)[0m  [1m[32mINSERT INTO "notes" ("title", "body", "created_at", "updated_at") VALUES (?, ?, ?, ?) RETURNING "id"[0m  [["title", "Note 2"], ["body", "Lorem ipsum saves lives"], ["created_at", "2024-04-01 04:53:07.072027"], ["updated_at", "2024-04-01 04:53:07.072027"]]
  [1m[36mTRANSACTION (0.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mNote Create (0.7ms)[0m  [1m[32mINSERT INTO "notes" ("title", "body", "created_at", "updated_at") VALUES (?, ?, ?, ?) RETURNING "id"[0m  [["title", "Note 3"], ["body", "Lorem ipsum saves lives"], ["created_at", "2024-04-01 04:53:07.074901"], ["updated_at", "2024-04-01 04:53:07.074901"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mNote Create (1.3ms)[0m  [1m[32mINSERT INTO "notes" ("title", "body", "created_at", "updated_at") VALUES (?, ?, ?, ?) RETURNING "id"[0m  [["title", "Note 4"], ["body", "Lorem ipsum saves lives"], ["created_at", "2024-04-01 04:53:07.077633"], ["updated_at", "2024-04-01 04:53:07.077633"]]
  [1m[36mTRANSACTION (0.1ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mTRANSACTION (0.0ms)[0m  [1m[36mbegin transaction[0m
  [1m[36mNote Create (1.0ms)[0m  [1m[32mINSERT INTO "notes" ("title", "body", "created_at", "updated_at") VALUES (?, ?, ?, ?) RETURNING "id"[0m  [["title", "Note 5"], ["body", "Lorem ipsum saves lives"], ["created_at", "2024-04-01 04:53:07.080252"], ["updated_at", "2024-04-01 04:53:07.080252"]]
  [1m[36mTRANSACTION (0.2ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for ::1 at 2024-04-01 13:53:12 +0900
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb
  Rendered C:/Users/hoang/.local/share/gem/ruby/3.2.0/gems/graphiql-rails-1.10.0/app/views/graphiql/rails/editors/show.html.erb (Duration: 5.7ms | Allocations: 2822)
Completed 200 OK in 14ms (Views: 10.7ms | ActiveRecord: 0.0ms | Allocations: 3824)


Started POST "/graphql" for ::1 at 2024-04-01 13:53:12 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery", "graphql"=>{"query"=>"\n    query IntrospectionQuery {\n      __schema {\n        \n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          \n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      \n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n      \n      \n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ", "operationName"=>"IntrospectionQuery"}}
Interface `Node` hidden because it has no visible implementors
Completed 200 OK in 84ms (Views: 1.5ms | ActiveRecord: 0.0ms | Allocations: 13427)


Started POST "/graphql" for ::1 at 2024-04-01 13:53:17 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  fetchNotes {\n    id\n    title\n    body\n  }\n}", "graphql"=>{"query"=>"query {\n  fetchNotes {\n    id\n    title\n    body\n  }\n}"}}
  [1m[36mNote Load (0.3ms)[0m  [1m[34mSELECT "notes".* FROM "notes" ORDER BY "notes"."created_at" DESC[0m
Completed 200 OK in 75ms (Views: 0.1ms | ActiveRecord: 4.5ms | Allocations: 18819)


Started POST "/graphql" for ::1 at 2024-04-01 13:58:11 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  fetchNote(id: 1) {\n    id\n    title\n    body\n  }\n}", "graphql"=>{"query"=>"query {\n  fetchNote(id: 1) {\n    id\n    title\n    body\n  }\n}"}}
  [1m[36mNote Load (0.1ms)[0m  [1m[34mSELECT "notes".* FROM "notes" WHERE "notes"."id" = ? LIMIT ?[0m  [["id", 1], ["LIMIT", 1]]
  ↳ app/graphql/queries/fetch_note.rb:7:in `resolve'
Completed 200 OK in 37ms (Views: 0.2ms | ActiveRecord: 5.2ms | Allocations: 9654)


Started POST "/graphql" for ::1 at 2024-04-01 13:59:54 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  test_field\n}", "graphql"=>{"query"=>"query {\n  test_field\n}"}}
Completed 200 OK in 5ms (Views: 0.2ms | ActiveRecord: 0.0ms | Allocations: 1050)


Started POST "/graphql" for ::1 at 2024-04-01 14:00:04 +0900
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"query {\n  testField\n}", "graphql"=>{"query"=>"query {\n  testField\n}"}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms | Allocations: 650)


